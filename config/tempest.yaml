# Positions are in meters from back left foot. ENU convention
# Pose is xyzrpy with rpy in radians

# Visual model for gazebo and rviz
# mass: 30.98036 # kg
# mass: 31.914759 # kg
#mass: 31.920 # kg from COM device on 4/12/22
mass: 32.3214 #kg
# volume: .0321 # m^3
volume: 0.0331 # this is new volume found from solid works. Seems wrong because it is half of what we had before
# Point which represents robot position. Must be near center
base_link: [-0.386, 0.352, -0.15] 
# com: [-0.37219, 0.36111, -0.11810]
#com: [-0.3570, 0.4210, -0.1100]
com: [-0.418, 0.357, -0.11] # With X and Y flipped
# com: [-0.357, 0.418, -0.11] # Switch back to this if new COM does not work
#cob: [-0.37219, 0.36111, -0.10810]
cob: [-0.400001, 0.35511, -0.10810]
#cob: [-0.357, 0.421,  -0.11]
#inertia: [1.32, 2.84, 3.65]
inertia: [0.9978, 1.6934, 2.1284] # These are new values from solid works (not convinced they are correct yet)

# Drag parameters
# Drag force = linear_damping * vel + quadratic_damping * vel * abs(vel)
# Vector is [X, Y, Z, X rotation, Y rotation, Z rotation] all in body frame
# TODO: Calculate real numbers 
# linear_damping: [-17.0, -50.0, -50.0, -2.0, -4.5, -2.5]
linear_damping: [-17.0, -17.0, -35.0, -2.0, -4.5, -2.5]
quadratic_damping: [-180.0, -180.0, -460.0, -6.0, -12.0, -12.0]

# maximum values for velocity and acceleration the thrusters are capible of reaching
maximum_linear_velocity: [.45, .4, .2]
maximum_linear_acceleration: [1.0, 1.0, 1.0]
maximum_angular_velocity: [1.0, 1.0, 2.0]
maximum_angular_acceleration: [2.0, 2.0, 2.0]

# P values for the control system
# linear_position_p: [1.0, 1.0, 1.0]
# linear_velocity_p: [3.5, 3.5, 3.5]
# angular_position_p: [300.0, 300.0, 300.0]
# angular_velocity_p: [10.0, 10.0, 10.0]
linear_position_p: [0.8, 0.5, 1.0]
linear_velocity_p: [4.7, 3.5, 6.0]
angular_position_p: [600.0, 600.0, 600.0]
angular_velocity_p: [2.5, 3.0, 3.5]

dvl:
  topic: dvl
  rate: 8 # Hz
  sigma: 0.001 # Stdev in m/s. Used by gazebo
  pose: [-0.375, 0.35, -0.32, 0, 0, -0.7853981]

depth:
  topic: depth/pressure
  rate: 20 # Hz
  sigma: 0.003 # Stdev in m. Used by gazebo
  pose: [ -0.527, 0.489, -0.0912, 0, 0, 0]

imu:
  topic: /imu/imu/data
  # Noise modeling is weird and is hard coded in urdf with some numbers.
  # TODO: Model noise
  rate: 100 #Hz
#  pose: [-0.316, 0.225, -0.046, -1.57079, 0, 0]
  pose: [-0.316, 0.225, -0.046, -1.574296, 0.0051, 3.141592]

cameras: [
  {
    type: cam2, 
    name: stereo,
    model: zed2,
    rate: 60, 
    hfov: 1.418, # 120deg (we have 120deg model) converted to rad 
    width: 1280, # TODO: Double check that this is the resolution we'll be running at 
    height: 720, 
    stddev: 0.02, # TODO: Estimate this number, I just ripped it from the other two 
    baseline: 0.12, # m. Distance between cameras (manually measured) 
    pose: [-0.242, 0.283, -0.066, 0, 0, 0], # TODO: Fill this in with actual measurements.
    imu_topic: imu/data_raw,
    imu_rate: 200, # Hz
    # Note: IMU Pose isn't necessary b/c it's located halfway between the two cameras and we can thus calculate it in the macros easily as {baseline/2}
  }
]

thruster: 
  rotor_constant: 0.01 # Not sure units. If too low bot shakes in sim
  max_force: 22 # Newtons. Thrusters draw about 8A here
  MIN_THRUST: 0.2
  STARTUP_THRUST: 1.5
  SU_THRUST:
    POS_SLOPE: 22.500000
    POS_YINT: 1520
    NEG_SLOPE: 28.600000
    NEG_YINT: 1477
  THRUST:
    POS_SLOPE: 6.66
    POS_YINT: 1552
    NEG_SLOPE: 8.54
    NEG_YINT: 1444

# Note: thruster type means the attack direction of the thruster. This means that the type of the thruster should match which way the thruster is expected to spin for the thruster test
thrusters: [
  {
    name: "HSF",
    type: 1,    # Needs 1 f
    pose: [0.019, -0.051, -0.078, 0.0, 1.57079, 0.0]
  },
  {
    name: "HSA",
    type: 0,    # Needs 2 f
    pose: [-0.764, -0.051, -0.078, 0.0, 1.57079, 0.0]
  },
  {
    name: "HPA",
    type: 1,    # Needs 3 f
    pose: [-0.764, 0.763, -0.078, 0.0, 1.57079, 0.0] 
  },
  {
    name: "HPF",
    type: 0,    # Needs 4 f
    pose: [0.019, 0.763, -0.078, 0.0, 1.57079, 0.0] 
  },
  {
    name: "VSF",
    type: 0,    # Needs 5
    pose: [-0.04, 0.008, -0.0706, 0.0, 0.0, -2.35619]
  },
  {
    name: "VSA",
    type: 0,    # Needs 6
    pose: [-0.676, 0.008, -0.0706, 0.0, 0.0, -0.78540]
  },
  {
    name: "VPA",
    type: 1,    # Needs 7
    pose: [-0.676, 0.674, -0.0706, 0.0, 0.0, 0.78540]
  },
  {
    name: "VPF",
    type: 1,    # Needs 8
    pose: [-0.04, 0.674, -0.0706, 0.0, 0.0, 2.35619]
  }
]