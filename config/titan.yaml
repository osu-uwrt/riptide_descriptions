# Positions are in meters from back left foot. ENU convention
# Pose is xyzrpy with rpy in radians

# Visual model for gazebo and rviz
mesh: package://riptide_descriptions/meshes/Titan.dae
mass: 26.7619 # kg
volume: .0321 # m^3
# Point which represents robot position. Must be near center
base_link: [-0.386, 0.352, -0.15] 
com: [-0.37219, 0.36111, -0.11810]
cob: [-0.37219, 0.36111, -0.10810]
inertia: [1.32, 2.84, 3.65]

# Drag parameters
# Drag force = linear_damping * vel + quadratic_damping * vel * abs(vel)
# Vector is [X, Y, Z, X rotation, Y rotation, Z rotation] all in body frame
# TODO: Calculate real numbers 
linear_damping: [-17.0, -50.0, -50.0, -2, -4.5, -2.5]
quadratic_damping: [-180.0, -460.0, -460.0, -6, -12, -12]

# maximum values for velocity and acceleration the thrusters are capible of reaching
maximum_linear_velocity: [.45, .2, .2]
maximum_linear_acceleration: [1, 1, 1]
maximum_angular_velocity: [.5, .5, 1]
maximum_angular_acceleration: [2, 2, 2]

# P values for the control system
linear_position_p: [1, 1, 1]
linear_velocity_p: [4, 4, 4]
angular_position_p: [300, 300, 300]
angular_velocity_p: [10, 10, 10]

dvl:
  topic: dvl
  rate: 8 # Hz
  sigma: 0.001 # Stdev in m/s. Used by gazebo
  pose: [-0.375, 0.35, -0.32, 0, 0, 0]

depth:
  topic: depth/pressure
  rate: 20 # Hz
  sigma: 0.003 # Stdev in m. Used by gazebo
  pose: [ -0.527, 0.489, -0.0912, 0, 0, 0]

imu:
  topic: imu/data
  # Noise modeling is weird and is hard coded in urdf with some numbers.
  # TODO: Model noise
  rate: 100 #Hz
  pose: [-0.316, 0.225, -0.046, 0, 0, 0]

cameras: [
  {
    type: mynt, 
    name: stereo,
    rate: 60, 
    hfov: 1.418, # 120deg (we have 120deg model) converted to rad 
    width: 1280, # TODO: Double check that this is the resolution we'll be running at 
    height: 720, 
    stddev: 0.02, # TODO: Estimate this number, I just ripped it from the other two 
    baseline: 0.12, # m. Distance between cameras (manually measured) 
    pose: [-0.242, 0.283, -0.066, 0, 0, 0], # TODO: Fill this in with actual measurements.
    imu_topic: imu/data_raw,
    imu_rate: 200, # Hz
    # Note: IMU Pose isn't necessary b/c it's located halfway between the two cameras and we can thus calculate it in the macros easily as {baseline/2}
  }
]

thruster: 
  mesh: package://riptide_descriptions/meshes/Propeller.dae
  rotor_constant: 0.01 # Not sure units. If too low bot shakes in sim
  max_force: 30 # Newtons. Thrusters draw about 8A here
  MIN_THRUST: 0.2
  STARTUP_THRUST: 1.5
  SU_THRUST:
    POS_SLOPE: 22.500000
    POS_YINT: 1520
    NEG_SLOPE: 28.600000
    NEG_YINT: 1477
  THRUST:
    POS_SLOPE: 6.66
    POS_YINT: 1552
    NEG_SLOPE: 8.54
    NEG_YINT: 1444


thrusters: [
  {
    name: "HSA",
    type: 1,
    pose: [-0.764, -0.051, -0.078, 0.0, -1.57079, 0.0]
  },
  {
    name: "HSF",
    type: 1,
    pose: [0.019, -0.051, -0.078, 0.0, -1.57079, 0.0]
  },
  {
    name: "VSF",
    type: 0,
    pose: [-0.04, 0.008, -0.0706, 0.0, 0.0, -2.35619]
  },
  {
    name: "VSA",
    type: 0,
    pose: [-0.676, 0.008, -0.0706, 0.0, 0.0, -0.78540]
  },
  {
    name: "HPF",
    type: 1,
    pose: [0.019, 0.763, -0.078, 0.0, -1.57079, 0.0] 
  },
  {
    name: "HPA",
    type: 1,
    pose: [-0.764, 0.763, -0.078, 0.0, -1.57079, 0.0] 
  },
  {
    name: "VPF",
    type: 0,
    pose: [-0.04, 0.674, -0.0706, 0.0, 0.0, 2.35619]
  },
  {
    name: "VPA",
    type: 0,
    pose: [-0.676, 0.674, -0.0706, 0.0, 0.0, 0.78540]
  }
]